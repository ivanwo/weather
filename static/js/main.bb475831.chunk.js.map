{"version":3,"sources":["App.js","apiKey.js","reportWebVitals.js","index.js"],"names":["Controller","props","onSubmit","getWeather","id","placeholder","WeatherData","data","name","weather","description","Number","main","temp","toFixed","App","useState","zip","setZip","weatherData","setWeatherData","weatherFetch","_","a","url","fetch","then","response","json","console","error","className","href","e","preventDefault","newZip","document","getElementById","value","length","log","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6OAKA,SAASA,EAAWC,GAClB,OACE,mCACE,uBAAMC,SAAUD,EAAME,WAAtB,UACE,uBAAOC,GAAG,WAAWC,YAAY,kBACjC,4CAKR,SAASC,EAAYL,GACnB,OACE,qCACE,6BAAKA,EAAMM,KAAKC,OAChB,6BAAKP,EAAMM,KAAKE,QAAQ,GAAGC,cAC3B,gCAAM,KAACC,OAAOV,EAAMM,KAAKK,KAAKC,MAAM,QAAc,IAAIC,QAAQ,GAA9D,cAkDSC,MA5Cf,WAAgB,IAAD,EACOC,mBAAS,OADhB,mBACRC,EADQ,KACHC,EADG,OAEuBF,mBAAS,IAFhC,mBAERG,EAFQ,KAEKC,EAFL,KAcTC,EAAY,uCAAG,WAAMC,GAAN,eAAAC,EAAA,sEAEZC,EAFY,8DAEiDP,EAFjD,qBCxCR,oCDwCQ,SAGWQ,MAAMD,GAC/BE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAjB,GAAO,OAAIW,EAAe,CAACX,OALlB,8DAOfoB,QAAQC,MAAR,2CACAD,QAAQC,MAAR,MARe,yDAAH,sDAWhB,OACE,qCACE,yBAAQC,UAAU,aAAlB,UACE,mBAAGC,KAAK,GAAR,SACE,2CAEF,cAAChC,EAAD,CAAYG,WA3BD,SAAA8B,GACfA,EAAEC,iBACF,IAAIC,EAASC,SAASC,eAAe,YAAYC,MAE9CH,EAAOI,OAAS,IACjBrB,EAAOiB,GACPN,QAAQW,IAAIL,GACZd,QAqBE,2DAA6B,4BAAIJ,UAEnC,8BACyB,GAAtBE,EAAYoB,OACVpB,EAAYsB,KAAI,SAACR,GAAD,OAAQ,cAAC3B,EAAD,CAAaC,KAAM0B,OACrC,qEEnDFS,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhB,SAASC,eAAe,SAM1BK,M","file":"static/js/main.bb475831.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport {default as apiKey} from './apiKey.js';\n\n// {  }\nfunction Controller(props){\n  return(\n    <>\n      <form onSubmit={props.getWeather}>\n        <input id=\"zipInput\" placeholder=\"zip, ie 48212\"></input>\n        <button>+</button>\n      </form>\n    </>\n  );\n}\nfunction WeatherData(props){\n  return(\n    <>\n      <h2>{props.data.name}</h2>\n      <h2>{props.data.weather[0].description}</h2>\n      <h2>{((Number(props.data.main.temp)-273.15)*(9/5)+32).toFixed(1)}°F</h2>\n    </>\n  );\n  //(2K − 273.15) × 9/5 + 32\n}\n\nfunction App() {\n  let [zip, setZip] = useState(48212);\n  let [weatherData, setWeatherData] = useState([]);\n\n  let getWeather = e => {\n    e.preventDefault();\n    let newZip = document.getElementById(\"zipInput\").value;\n    // VALIDATE ZIP CODE HERE\n    if(newZip.length > 1 ){\n      setZip(newZip);\n      console.log(newZip);\n      weatherFetch();\n    }\n  }\n  let weatherFetch = async _ =>{\n    try{\n     let url = `https://api.openweathermap.org/data/2.5/weather?zip=${zip},us&appid=${apiKey}`;\n      const weatherCall = await fetch(url)\n      .then(response => response.json())\n      .then(weather => setWeatherData([weather]));\n    } catch(e) {\n      console.error(`yikes lmao looks like ya got a problemo`);\n      console.error(e);\n    }\n  }\n  return (\n    <>\n      <header className=\"App-header\">\n        <a href=\"\">\n          <h1>Weather</h1>\n        </a>\n        <Controller getWeather={getWeather}/>\n        <h2>Currently weatherin' out <i>{zip}</i></h2>\n      </header>\n      <div>\n        {weatherData.length == 0 ?\n          (weatherData.map((e) => (<WeatherData data={e}/>))\n           ) :  (<p>please enter zip and press \"+\"</p>)\n          }\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","let apiKey = \"98716f1078d2a0dbc1e1adbdd06ffded\";\nexport default apiKey;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}